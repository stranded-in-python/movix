#!/bin/bash

python_version="3.11"
org="stranded-in-python"
repos="movix-ugc movix-auth movix-sqlite-etl movix-etl movix-api movix-notification-api movix-notification-scheduler movix-notification-worker movix-admin"
default_repos_folder="projects"
default_venv_folder=".venv"
default_requirements="requirements/local.txt"
default_main_branch="main"
default_remote="origin"

if [ ! $(which pre-commit) ]; then
  npm install pre-commit --global
  pre-commit install
fi

if [ ! -d "./${default_repos_folder}" ]; then
  echo "Not found ${default_repos_folder} dir, creating..."
  mkdir ${default_repos_folder}
fi

cd $default_repos_folder

for repo in $repos; do

  if [ ! -d "./${repo}" ]; then
    echo "Not found ${repo} repo, cloning..."
    git clone git@github.com:$org/$repo.git
    cd $repo
    python${python_version} -m venv $default_venv_folder
    source $default_venv_folder/bin/activate
    pip install -r $default_requirements
    # check if pre-commit is installed
    if [ $(which pre-commit) ]; then
      pre-commit install --hook-type pre-commit --hook-type pre-push --hook-type pre-merge-commit
    fi
    deactivate
    cd ..
    echo "Installed and configured ${repo}"
  else
    echo "Updating ${repo}..."
    cd ${repo}
    local_branch=$(git rev-parse --abbrev-ref HEAD)
    git fetch
    git stash
    git checkout $default_main_branch
    git pull $default_remote $default_main_branch
    git co $local_branch
    git stash pop
    echo "Successfully updated ${repo}/${default_main_branch}. Local changed are in stash"
    cd ..
  fi

done

cd ..
